name: Run data pipeline scripts on schedule or push

on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/20 12-23,0-5 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest 
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Restore dependencies if needed 
    - name: Restore Node.js dependencies cache
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-npm-cache-

    # Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'npm'

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Ensure the refresh-inputs.sh script is executable
    - name: Make refresh-inputs.sh executable
      run: chmod +x ./refresh-inputs.sh

    # Run the refresh-inputs.sh script
    - name: Run the refresh-inputs.sh script
      run: ./refresh-inputs.sh

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    # Ensure the build-and-deploy.sh script is executable
    - name: Make build-and-deploy.sh executable
      run: chmod +x ./build-and-deploy.sh

    # Run the build-and-deploy.sh script
    - name: Run the build-and-deploy.sh script
      run: ./build-and-deploy.sh

    # Save Node.js dependencies cache
    - name: Save Node.js dependencies cache
      if: always()
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-npm-cache-${{ hashFiles('package-lock.json') }}

    # Commit and push if changed
    - name: Commit and push if changed
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push